---
title: '<img src="imagenes/LogoMATUC.png" alt="Logo Facultad de Matemáticas" style="width: 450px; margin-bottom: -40px;"/> <br>
        <span style="font-size:0.6em; color:#2E86C1;"> EPG3308: Computación Estadística </span> <br>
         <span style="font-size:0.8em; color:#313131;display:block;margin-bottom:40px;"> Clase 01: Introducción a R</span>' 
subtitle: '**Profesor**: Hernán Robledo Araya (harobledo@uc.cl) <br>
           **Ayudante**: Josefa Silva Muñoz (josefa.silva@alumni.uc.cl) <br> <br> 
           Primer Semestre - 2025'
format:
  revealjs: 
    incremental: true 
    slide-number: true
    preview-links: auto
    css: styles.css 

---

------------------------------------------------------------------------------------------------------------

<div style="text-align: center;font-size:2em">
<b> ¡Bienvenidos al Magíster en Estadística! </b>
</div>

<img src="imagenes/magister.jpg" alt="magister" style="width: 450px; margin-bottom: -40px; display: block; margin-left: auto; margin-right: auto;"/>

------------------------------------------------------------------------------------------------------------

<div style="text-align: center;font-size:2em">
<b> ¡Y al Curso de Computación Estadística! </b>
</div>

<img src="imagenes/malla.png" alt="malla" style="width:200px; display: block; margin-left: auto; margin-right: auto;"/>

------------------------------------------------------------------------------------------------------------

<div style="text-align: center;font-size:1.5em">
<b> EPG3308 Computación Estadística </b>
</div>

::: columns
::: {.column width="45%"}

<div style="text-align: center;font-size:1em"> <b> Profesor  </b> <br> Hernán Robledo Araya </div>

<img src="imagenes/Hernan.jpg" alt="hernan" style="width:210px; display: block; margin-left: auto; margin-right: auto;"/>

:::

::: {.column width="5%"}
:::

::: {.column width="45%"}

<div style="text-align: center;font-size:1em"> <b> Ayudante </b> <br>  Josefa Silva Muñoz</div>

<img src="imagenes/Josefa.jpeg" alt="josefa" style="width:300px; display: block; margin-left: auto; margin-right: auto;"/>

:::
:::

------------------------------------------------------------------------------------------------------------

<div style="text-align: center; font-size: 1.2em;"> 
  ¿<em>Computación Estadística</em>?
</div>

. . .

<div id="txbox" style="text-align: center; font-size: 1.7em;"> 
  <b> <span> Aprender a utilizar un Programa para realizar Análisis Estadísticos. </b>
</div>



------------------------------------------------------------------------------------------------------------

<br><br>
<div style="text-align: center;font-size:1.5em"> [<b> Página Web del Curso</b>](https://cursos.canvas.uc.cl/courses/83931) </div>
<br>

[<img src="imagenes/canvas.jpeg" style="width:700px; display: block; margin-left: auto; margin-right: auto;"/>](https://cursos.canvas.uc.cl/courses/83931)



------------------------------------------------------------------------------------------------------------

<div style="font-size: 1.5em;"> 
  <b> Metodología de Aprendizaje </b>
</div>

1. Asistir a clases.
2. Participar de las actividades en clases para practicar.
3. Prepararse para rendir laboratorios con mínimo apoyo.
4. Realizar tareas desde la casa con todo el material disponible.


## {background="#43464B" background-image="imagenes/statisticalcomputing.jpg"}

<div style="display: flex; text-align:center; justify-content: center; align-items: center; height: 100vh; color: white; font-size: 3.5em;">
  <b>Computación <br> Estadística</b>
</div>


------------------------------------------------------------------------------------------------------------

En **Estadística**,

* Recolectamos datos
* Organizamos datos
* Analizamos datos
* Interpretamos datos
* Inferimos sobre los fenómenos

. . .

¿Para qué?

. . .

<div style="text-align: center; font-size: 1.5em;"> 
  <b> Tomar Decisiones </b>
</div>


. . .

<div style="text-align: center; font-size: 1.2em;"> 
  ¡Necesitamos un programa para hacer todo esto!
</div>



------------------------------------------------------------------------------------------------------------

<div style="position: relative; height: 100vh; width: 100%; display: flex; justify-content: center; align-items: center;">
  ![](imagenes/spss){.absolute top="20" left="30" width="400" style="transform: rotate(-30deg);"}
  ![](imagenes/minitab){.absolute top="450" left="120" width="400" style="transform: rotate(-10deg);"}
  ![](imagenes/excel){.absolute top="-50" left="400" width="300" style="transform: rotate(5deg);"}
  ![](imagenes/python){.absolute top="250" left="80" width="500" style="transform: rotate(15deg);"}
  ![](imagenes/rstudio){.absolute top="520" left="520" width="450" style="transform: rotate(30deg);"}
  ![](imagenes/sas){.absolute top="200" left="560" width="400" style="transform: rotate(-30deg);"}
  ![](imagenes/stata){.absolute top="0" left="670" width="500" style="transform: rotate(35deg);"}
</div>

------------------------------------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
[**Formulario  de conocimientos de programas para estadística**](https://forms.office.com/r/eJrLidHJPu)
</div>


[<img src="imagenes/forms.png" style="width:700px; display: block; margin-left: auto; margin-right: auto;"/>](https://cursos.canvas.uc.cl/courses/83931)

------------------------------------------------------------------------------------------------------------

**En este curso veremos:** <br><br>

. . .

<img src="imagenes/Rlogo.png" style="width:700px; display: block; margin-left: auto; margin-right: auto;"/>

------------------------------------------------------------------------------------------------------------

<img src="imagenes/Rlogo.png" style="width:300px; display: block; margin-left: auto; margin-right: auto;"/>
<br>

<div style = "text-align: center; font-size:1.5em">
**R** es un *Lenguaje de Programación* diseñado específicamente para análisis estadístico.
</div>


------------------------------------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
Glosario de Programación
</div>

<section style="font-size: 0.9em;">

* ***Programación***: Acción y efecto de programar. 

* ***Programar***: Proceso de crear instrucciones para un computador de modo que este ejecute las instrucciones establecidas.

* ***Lenguaje de Programación***: dialecto específico utilizado para programar. 
  * *En Chile se habla español, como en R se habla en lenguaje... ¡R!*
  * El lienzo donde el programador escribe sus instrucciones es denominado ***Código*** o ***Script***.

* ***Sintaxis***: son las reglas del lenguaje de programación sobre cómo estructurar las *palabras* de este lenguaje para que sea funcional.

</section>

------------------------------------------------------------------------------------------------------------

**Dinámica de Programación**

<div style = "font-size:0.8em">
* Humano escribe código, 
  * Humano entrega código al programa (R en este caso),
    * Programa ejecuta las instrucciones correctamente.
      * Humano es feliz 😁
</div>

. . .

**Dinámica *Realista* de Programación**

<div style = "font-size:0.7em">
* Humano escribe código, 
  * Humano entrega código al programa,
    * Programa lo <span style = "color: red"> rechaza </span> por contener errores de escritura,
        * Humano entrega código corregido,
          * Programa vuelve a <span style = "color: red"> rechazar </span>,
            * Humano entrega código corregido,
              * Programa vuelve a <span style = "color: red"> rechazar </span>,
                * Humano entrega código corregido,
                  * Programa vuelve a <span style = "color: red"> rechazar </span>,
                    * Humano entrega código corregido,
</div>

------------------------------------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
Ejemplo de un **código** en R
</div>

<br>

. . . 

```{r echo = TRUE, eval = FALSE, class.source = "large-code"}
notas <- c(5.1, 4.2, 6.3, 5.9)
promedio <- mean(notas)
print(paste("Nota Final en EPG3308:", promedio))

if(promedio < 4.0){
  print("¡Oh no! He reprobado el curso :( ")
} else{
  print("Facilito el curso :) ")
}
```

<br>

. . . 

<div style = "text-align: center; font-size:1.5em">
¿Qué hará este código?
</div>


------------------------------------------------------------------------------------------------------------

<img src="imagenes/Rlogo.png" style="width:200px; display: block; margin-left: auto; margin-right: auto;"/>
<div style = "text-align: center; font-size:1.5em">
**¿Por qué usar R?**
</div>

<div style = "font-size:0.7em">
1. **Es gratis.**
2. Liviano y disponible en múltiples plataformas.
3. Flexibilidad para construir procesos complejos.
4. Rápido y eficiente en ejecutar sus tareas.
5. Programa de *Código abierto*.
6. Herramientas básicas y avanzadas para manipulación de datos.
7. Herramientas básicas y avanzadas para estadística.
7. Comunidad construye nuevas librerías.
8. Poderosas herramientas gráficas.
</div>

------------------------------------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
¿Cómo se aprende a programar en <img src="imagenes/Rlogo.png" style="width:80px;"/> u otro lenguaje?
</div>
<br>


<div style = "font-size:0.9em">
1.  Aprendiendo la *sintaxis* y el dialecto del lenguaje de programación.
2. Familiarizándonos resolviendo tareas sencillas.
3. Resolviendo problemas interesantes.
4. <div style = "font-size:1.2em"> **¡Equivocándonos mil y un veces!** </div>
</div>

. . .

<div style="text-align: center; font-size:1.5em; color: #2E86C1;">
  **Corregir los errores enseña más que cien cursos**
</div>


------------------------------------------------------------------------------------------------------------

<div style="text-align: center; font-size: 1.5em;">
**Hoy aprender a programar es más fácil que nunca**
</div>

. . .

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/youtube.png" style="width: 350px; margin: 10px; align-self: center;">
  <img src="imagenes/w3school.png" style="width: 200px; margin: 10px; align-self: center;">
  <img src="imagenes/datacamp.png" style="width: 400px; margin: 10px; align-self: center;">
</div>

. . .

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/chatgpt.png" style="width: 320px; margin: 10px; align-self: center;">
  <img src="imagenes/copilot.png" style="width: 250px; margin: 10px; align-self: center;">
  <img src="imagenes/gemini.png" style="width: 300px; margin: 10px; align-self: center;">
</div>

------------------------------------------------------------------------------------------------------------

<div style="text-align: center; font-size: 1.5em;">
**¿Por qué usar R y no Python, o Julia, u otro lenguaje?**
</div>

::: {style="font-size:0.8em;"}
- Python requiere *librerías* extras para algunos procedimientos estadísticos básicos.
- R dispone de métodos estadísticos avanzados:
  - Modelos Lineales Generalizados
  - Análisis de Series de Tiempo
  - Métodos Bayesianos
:::

. . .

::: {.callout-note}
## Nota
Python o Julia siguen siendo excelentes opciones para estadística *clásica*.
:::

------------------------------------------------------------------------------------------------------------

<div style="text-align: center; font-size: 1.5em;">
**Instalar <img src="imagenes/Rlogo.png" style="width:90px;"/>**
</div>

<div style="text-align: center; font-size: 1.5em;">
[**Página Oficial**](https://www.r-project.org/)
</div>

<br>

<img src="imagenes/paginar.jpg" style="width:900px; display: block; margin-left: auto; margin-right: auto;"/>

. . .

![](imagenes/flecha.png){.absolute top="460" left="560" width="100" style="transform: rotate(-90deg);"}

------------------------------------------------------------------------------------------------------------

Escoger el *repositorio* chileno para descargar R. 

. . .

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/cran1.png" style="width: 600px; margin: 10px; align-self: center;">
</div>

. . .

![](imagenes/flecha.png){.absolute top="410" left="500" width="60" style="transform: rotate(90deg);"}

. . .

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/cran2.png" style="width: 700px; margin: 10px; align-self: center;">
</div>

. . .

![](imagenes/flecha.png){.absolute top="580" left="700" width="60" style="transform: rotate(-90deg);"}

------------------------------------------------------------------------------------------------------------

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/paginar2.png" style="width: 900px; margin: 10px; align-self: center;">
</div>

. . .

![](imagenes/flecha.png){.absolute top="140" left="360" width="120" style="transform: rotate(-90deg);"}


<br>

* Tras la descarga, instalar programa dejando opciones por defecto.
* En macOS, el procedimiento es equivalente.

------------------------------------------------------------------------------------------------------------

* Para abrir R, ingresar *R 4.3* en el buscador.

. . .

<div style="display: flex; justify-content: center; align-items: center;">
  <img src="imagenes/rbasico.png" style="width: 1200px; margin: 10px; align-self: center;">
</div>


------------------------------------------------------------------------------------------------------------

<div style="text-align: center; font-size: 1.5em;">
**Interfaz Gráfica mejorada para R**
</div>

![](https://posit.co/wp-content/themes/Posit/dist/images/site-share-image-25.png){.absolute top="70" left="250" width="600" style="transform: rotate(0deg);"}

![](https://bookdown.org/andersson_vargas/aprendiendo_r_studio_-_avm/Imagenes/RStudio-Logo-Flat.png){.absolute top="400" left="10" width="420" style="transform: rotate(0deg);"}

![](https://posit.cloud/images/posit-cloud.jpg){.absolute top="400" left="550" width="470" style="transform: rotate(0deg);"}

<br><br><br><br><br><br><br><br><br>
<div style="text-align: center; font-size: 1em;">
[**Página Web**](https://posit.co/download/rstudio-desktop/) &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;    [**Página Web**](https://client.login.posit.cloud/oauth/register?redirect=https%3A%2F%2Fclient.login.posit.cloud%2Foauth%2Flogin%3Fshow_auth%3D0%26show_login%3D0)
</div>

------------------------------------------------------------------------------------------------------------

![](https://bookdown.org/andersson_vargas/aprendiendo_r_studio_-_avm/Imagenes/RStudio-Logo-Flat.png){.absolute top="-20" left="400" width="200" style="transform: rotate(0deg);"}

![](imagenes/rstudio10.png){.absolute top="70" left="50" width="1000" style="transform: rotate(0deg);"}

. . .

![](imagenes/rstudio11.png){.absolute top="70" left="50" width="1000" style="transform: rotate(0deg);"}

------------------------------------------------------------------------------------------------------------

![](https://bookdown.org/andersson_vargas/aprendiendo_r_studio_-_avm/Imagenes/RStudio-Logo-Flat.png){.absolute top="-20" left="400" width="200" style="transform: rotate(0deg);"}

![](imagenes/rstudio2.png){.absolute top="80" left="100" width="900" style="transform: rotate(0deg);"}

. . .

![](imagenes/rstudio3.png){.absolute top="80" left="100" width="900" style="transform: rotate(0deg);"}

. . .

![](imagenes/rstudio4.png){.absolute top="80" left="100" width="900" style="transform: rotate(0deg);"}


## <span style="color: #28A745;">¡Actividad Bonificada!</span> {auto-animate="true"}
<div class="small-font"> <!-- Clase definida en styles.css -->

::: {.nonincremental}
1. Instale R y R Studio.
2. Desde R Studio, crear un nuevo código y guardarlo bajo algún nombre en alguna carpeta.
3. Dentro del código creado, escriba <b> comentarios </b> anteponiendo cada una con un símbolo #.

``` r
# !Esto es un comentario!
##### ¡Esto tambien es un comentario!
# Copiar desde el boton en la esqina superior derecha de este cuadro.
```

4. Escriba en el código lo que ha aprendido durante esta sesión y aquello que le causa curiosidad del curso.
5. Guarde el archivo y subir a Actividad Bonificada 1 en la sección de Tareas de Canvas.

:::

</div>


## {background="#FFFFFFF" background-image="imagenes/0023_PortadaClase2.png"}


--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
¿Cómo se aprende a programar en <img src="imagenes/Rlogo.png" style="width:80px;"/> u otro lenguaje?
</div>
<br>

::: {.nonincremental}
<div style = "font-size:0.9em">
1.  Aprendiendo la *sintaxis* y el dialecto del lenguaje de programación.
2. Familiarizándonos resolviendo tareas sencillas.
3. Resolviendo problemas interesantes.
4. <div style = "font-size:1.2em"> **¡Equivocándonos mil y un veces!** </div>
</div>
:::

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
**Como ejecutar código en R**
</div>
<br> 

![](imagenes/0020_CodigoR.png){.absolute top="110" left="100" width="900" style="transform: rotate(0deg);"}

. . .

![](imagenes/0021_CodigoR.png){.absolute top="110" left="100" width="800" style="transform: rotate(0deg);"}

<br><br><br><br><br><br><br><br><br>

. . . 

**Atajo del Teclado: ** Control + Enter

## {background="#43464B" background-image="imagenes/statisticalcomputing2.jpg"}

<div style="display: flex; text-align:center; justify-content: center; align-items: center; height: 100vh; color: white; font-size: 3.5em;">
  <b>  R La Calculadora </b>
</div>

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
**R como Calculadora**
</div>

**Suma y Resta**
```{r eval = TRUE, echo = TRUE}
1 + 1

10 - 2



2^2

2**2 

-1^2

```

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
**R como Calculadora**
</div>

**Multiplicación y División**
```{r eval = TRUE, echo = TRUE}
-5 * 6

3 / -2
```

**Potencias y Raíces**
```{r eval = TRUE, echo = TRUE, error = TRUE}
2**2 

-1^2

2^(1/2) # Raíz cuadrada

sqrt(-1) # NaN = Not a Number
```

-------------------------------------------------------------------------------- 

<div style = "text-align: center; font-size:1.5em">
**R como Calculadora**
</div>

<div style = "font-size:0.8em">
* El orden en que se aplican las operaciones sigue las reglas de la matemática.
  * Usar paréntesis `()` para agrupar sus operaciones y salir de duda.
  
<br>

* Orden:
  1. Paréntesis
  2. Exponenciación y raíces
  3. Multiplicación y división (de izquierda a derecha)
  4. Suma y resta
</div>


--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
**R como Calculadora**
</div>

::: {.nonincremental}

<div style = "font-size:0.8em">
* El orden en que se aplican las operaciones sigue las reglas de la matemática.
  * Usar paréntesis `()` para agrupar sus operaciones y salir de duda.
</div>

:::

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
1 + 2 * 2
1 + (2 * 2)
```

<br>

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
-1 * 2^3
-1 * (2^3)
```

-------------------------------------------------------------------------------- 

::: {.nonincremental}

<div style = "text-align: center; font-size:1.5em">
**R como Calculadora**
</div>

<div style = "font-size:0.8em">
* El orden en que se aplican las operaciones sigue las reglas de la matemática.
  * Usar paréntesis `()` para agrupar sus operaciones y salir de duda.
</div>
:::

```{r eval = TRUE, echo = TRUE, error = TRUE}
3 - 2 / 5 * 5
3 - ( (2 / 5) * 5 )
```

. . .

<br>

```{r eval = TRUE, echo = TRUE, error = TRUE}
-5 / 7 + 2 * 2
(-5 / 7) + (2 * 2)

```

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.3em">
**¡Actividad de Cinco Minutos!**
</div>

::: {.nonincremental}

<div style = "font-size:0.8em">
1. Transforme a grados Farenheit los 26 grados Celsius pronosticados para mañana.

$$F = 32 + C \times \frac{9}{5}$$
2. Si usted obtuvo un promedio de notas de laboratorios de $3.5$, un promedio de tareas de $4.2$, y un examen de $4.5$, ¿aprueba el curso?

</div>

:::

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.3em">
**¡Actividad de Cinco Minutos!**
</div>

::: {.nonincremental}

<div style = "font-size:0.7em">

3. Sea $p$ el puntaje obtenido en una evaluación que tiene $p_{max}$ puntos como máximo. La nota que un estudiante obtiene bajo cualquier porcentaje de exigencia $Ex$ se calcula como sigue:

* Si se obtiene un puntaje $p < E\cdot p_{max}$, 
$$\text{Nota} = 1 + 3\cdot\frac{1}{Ex}\cdot\frac{p}{p_{max}}.$$

* Mientras que si se obtiene un puntaje $p \geq E \cdot p_{max}$,
$$\text{Nota} = 4 + 3\cdot\frac{p - Ex \cdot p_{max}}{p_{max}\cdot ( 1- Ex)}.$$

¿Qué nota obtuvo usted si obtuvo 25 puntos en una prueba de 30 puntos como máximo bajo una exigencia del 80%?

</div>

:::

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.3em">
**¡Actividad de Cinco Minutos!**
</div>

::: {.nonincremental}

<div style = "font-size:0.8em">

4. (para conocedores de funciones y condicionales) Construya una función que entregue la nota obtenida en una evaluación tras recibir como argumentos el puntaje obtenido, el puntaje total de la evaluación, y el porcentaje de exigencia.  

* Explore las escalas de notas bajo el 50%, 60%, y 70%.

</div>

:::

--------------------------------------------------------------------------------

![](imagenes/0022_NotasEx.png){.absolute top="110" left="100" width="900" style="transform: rotate(0deg);"}
Fuente: [J. Pumarino](https://escaladenotas.cl/)


## {background="#43464B" background-image="imagenes/statisticalcomputing2.jpg"}

<div style="display: flex; text-align:center; justify-content: center; align-items: center; height: 100vh; color: white; font-size: 3.5em;">
  <b> Texto en R</b>
</div>

--------------------------------------------------------------------------------

<div style = "text-align: center; font-size:1.5em">
**Escribir e Imprimir Texto en Consola**
</div>

. . .

```{r eval = FALSE, echo = TRUE}
### ¡Este codigo hace calculos muy importantes!

# Operacion 1
#                    Operacion 2
#         Operacion 3
#             .
#             .     Operacion hecha con IA
#  Error parcheado           
#             .
#             .
#          Operacion 500.

 
# Anunciar finalizacion con exito del proceso:
print("¡Proceso terminado!")

```

--------------------------------------------------------------------------------

<div style = "font-size:1.5em">
Sintaxis para **texto**
</div>



* Todo carácter que deseen utilizarse como texto se escribe entre **comillas dobles** o entre comillas simples.

. . .

```{r eval = FALSE, echo = TRUE}
"¡Hola mundo!"

'¡Tambien sirvo con comillas simples!'

"19.792.578-5"

"(5 + 3/2)^2"

'print("¡Hola mundo!")'

```

. . .

- Texto así no tiene mayor uso.
- Comunicar a un lector de código a través de comentario:

. . .

```{r echo = TRUE}
## ¡Recorre este código cuan ave aletea en la vastedad!
```


--------------------------------------------------------------------------------

**Impresión de texto en consola**

* **Función `cat()`**: concatena texto e imprime en la consola.
  * `cat` de concatena.
  
. . .

```{r eval = TRUE, echo = TRUE}
cat("¡Hola mundo!")
```

. . .

<br>

```{r eval = TRUE, echo = TRUE}
# Una coma separa cada texto, que luego la funcion los une en uno solo.
cat("Este es uno de" , "mis primeros textos" , "impresos.") 

```

. . .

<br>

```{r eval = TRUE, echo = TRUE}
cat("(5 + 3/2)^2")
```

<br>

--------------------------------------------------------------------------------

```{r eval = TRUE, echo = TRUE, error = TRUE}
cat(No se me ocurre qué más decir)
```

. . . 

<br>

```{r eval = TRUE, echo = TRUE, error = TRUE}
cat("Mi nota es \n 1 + 6*(7.2/10) =", 1 + 6*(7.2/10))
```

<div style = "font-size: 0.8em">
* Notar que puede recibir una operación e imprime el resultado.
</div>



. . . 

<br>

```{r eval = TRUE, echo = TRUE, error = TRUE}
cat('El resultado de la operacion es = ', mil)
```

. . . 

<br>

```{r eval = TRUE, echo = TRUE, error = TRUE}
cat('El resultado de la operacion es =', 1000
```

--------------------------------------------------------------------------------

`cat()` es una *función*.

  * Internamente ejecuta un procedimiento que puede depender o no de los elementos entregados por el usuario. 
    * **Argumentos de una función**: lo que debe recibir para que una función funcione.

. . . 

```{r eval = FALSE, echo = TRUE, error = TRUE}
cat(Argumento 1, Argumento 2, Argumento 3, ...)
```

<br>

. . . 

```{r eval = TRUE, echo = TRUE, error = TRUE}
cat("En", "la", "clase","de", "hoy", "veremos", "la", "funcion","cat")
```

--------------------------------------------------------------------------------

**Función `print(x)`**: si `x` es texto, (sólo) lo imprime. Si `x` es otro objeto, imprime los atributos definidos a ser impresos.

* Es menos flexible que `cat` para manipular texto.

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
print("¡Jelou Mundo!")
```

<br>

. . .

```{r eval = FALSE, echo = TRUE, error = TRUE}
print(cat) # Imprime el codigo de cat.
```

<br>

. . . 

```{r eval = TRUE, echo = TRUE, error = TRUE}
print("Este es uno de" , "mis primeros textos" , "impresos.")
```

--------------------------------------------------------------------------------

**Función `paste(x, y,...)`**: pega los textos `x` y `y` separándolos por un espacio.

<div style = "font-size: 0.8em">
* Similar a `cat`, pero `cat` sólo imprime y devuelve texto impreso.
</div>

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
Texto1 <- "Este es mi texto"
Texto2 <- "y de nadie más!"
```

<br>

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
TextoUnido <- cat(Texto1, Texto2)

print(TextoUnido) # No lo guarda!!
```

. . .

```{r eval = TRUE, echo = TRUE, error = TRUE}
TextoUnido <- paste(Texto1, Texto2)
print(TextoUnido)
```


--------------------------------------------------------------------------------

::: {.nonincremental}

<div style = "text-align: center; font-size:1.3em">
**¡Actividad de Cinco Minutos!**
</div>

1. Usando `cat`, concatene en una única frase el siguiente poema de Pablo Neruda:

<div style = "text-align: center; font-size:0.9em">
**Punto**

*No hay espacio más ancho que el dolor,*

*no hay universo como aquel que sangra.*
</div>

2. En un único `cat` y con todo el poema en un único texto, use `\n` para que al imprimir el poema en la consola se haga un salto de línea tras la coma del poema. Observe qué ocurre si usa `print` para imprimir el mismo texto.

:::

--------------------------------------------------------------------------------

::: {.nonincremental}

<div style = "text-align: center; font-size:1.3em">
**¡Actividad de Cinco Minutos!**
</div>

3. En un único `cat` y con todo el poema en un único texto, use `\n` para que al imprimir el poema en la consola se haga un salto de línea tras cada salto incluido por el poeta.

<div style = "text-align: center; font-size:0.9em">
**Océano**

*Cuerpo más puro que una ola,*

*sal que lava la línea,*

*y el ave lúcida*

*volando sin raíces.*
</div>
:::

## {background="#43464B" background-image="imagenes/statisticalcomputing2.jpg"}

<div style="display: flex; text-align:center; justify-content: center; align-items: center; height: 100vh; color: white; font-size: 3.5em;">
  <b> Creando Objetos en R</b>
</div>

--------------------------------------------------------------------------------

* Definir cantidades que puedan ser operadas posteriormente en el código.
* Sintaxis:

. . .

<div style = "text-align: center; font-size:1em">

`Nombre <- Elemento Almacenado como "Nombre" `

</div>

. . .

```{r eval = FALSE, echo = TRUE}
FondosTotales <- 2234031
##    Se gasto 120000 en impresiones
##                     Se gastaron 120000 en renovacion de equipos
##                     Se gastaron 30000 en chocmans
##   Ingresaron 944000 por pago de clientes
##              .
##              .
##        Otras operaciones importantes
##              .
print(FondosTotales)
```

```{r echo = FALSE}
FondosTotales <- -25900
print(FondosTotales)
```

* Objeto ```FondosTotales``` recibió cambios (ficticios) y tiene nuevo valor.

--------------------------------------------------------------------------------

*Se puede usar `=` en vez de `<-` pero puede llevar a confusiones.

* Definir objetos **mejora la legibilidad del código.**

. . .


<div style = "text-align: center; font-size:1em">
Sin objetos definidos
</div>

```{r eval = TRUE, echo = TRUE}
print(4 + 3 * (25 - 0.80*30)/(30 * (1 - 0.80)))
```

. . .

<br>

<div style = "text-align: center; font-size:1em">
Con objetos definidos
</div>

```{r echo = TRUE}
puntaje <- 25
puntajeMax <- 30
Exigencia <- 0.80

Nota <- 4 + 3 * (puntaje - Exigencia*puntajeMax)/(puntajeMax * (1 - Exigencia))
```


--------------------------------------------------------------------------------

Sobre nombres:

* No pueden tener espacios dentro del nombre. Ej: `mi objeto <- 5`

* No pueden llevar ciertos carácteres especiales. Ej: `valor$ <- 5`, `valor& <- 5`

* No pueden iniciar con un número. ej: `1objeto <- 5`

* Se recomienda no usar palabras reservadas para otras funciones u otros objetos. Ej: `print <- 5`

--------------------------------------------------------------------------------

¡Nombres de los objetos son sensible a mayúsculas y otras puntuaciones!

. . .

```{r echo = TRUE, eval = TRUE, error = TRUE}
Valor <- 1000
TEXTO <- "Esto es un texto!"
datos_2 <- mtcars # Tabla de Datos guardada en R.
lstas <- list()
secuencias  <- c(10, 400, 200, 500)

print(valor)
print(texto)
print(datos2)
print(listas)
print(secuencia)
```



--------------------------------------------------------------------------------

**Buenas prácticas para asignación de nombres**

1. Usar nombres descriptivos.

. . .

```{r echo = TRUE}
a <- 4.3 # ¿?
NotaTarea1 <- 4.3
```

2. Usar sólo una convención de nombramiento para todo el código:

* *Camel Case*: `nombreObjeto`
* *Snake Case*: `nombre_objeto`
* *Pascal Case*: `NombreObjeto`

3. Evitar abreviaciones vagamente informativas. Ej: `var1`, `a1`, `X1`, etc.

--------------------------------------------------------------------------------

4. Usar patrones coherentes en el código.

. . .

```{r echo = TRUE}
total_ventas <- 1000
ventas_totales <- 1000 # Se rotó la posición de totales! Malo.
```



5. Añadir contexto si hace falta.

. . .

```{r echo = TRUE}
venta <- 200  # ¿?
ventaDiaria <- 2
ventaAnual <- 1000
```

6. Usar prefijos o sufijos para caracterizar.

. . .

```{r echo = TRUE, eval = FALSE}
tabla_ventas
vector_productosVendidos
valor_dineroRestante
```

7. ¡Cualquier otra cosa que ayude a le legibilidad!


## {background="#43464B" background-image="imagenes/statisticalcomputing2.jpg"}

<div style="display: flex; text-align:center; justify-content: center; align-items: center; height: 100vh; color: white; font-size: 3.5em;">
  <b> Funciones en R</b>
</div>


--------------------------------------------------------------------------------

**Funciones**: bloque de código que posee un nombre asignado y realiza una tarea específica.

<div style = "font-size:0.8em">
  * Es reutilizable.
  * Usualmente recibe de entrada elementos que definen el proceso a realizar.
    * Los *Argumentos* de la función son estos objetos.
  * Puede o no entregar un objeto de salida.
</div>

. . .

[Fuente de Imágen](https://www.saludolearning.in/topics/c/user-defined-functions-in-c/)
![](https://scaler.com/topics/images/what-is-a-function.webp)



--------------------------------------------------------------------------------

<div style = "font-size:1.4em">

**Sintaxis para crear funciones**

</div>

<div style = "font-size:1.3em">

```{r eval = FALSE, echo = TRUE}
NombreFuncion <- function(Argumento1, Argumento2, ..., ArgumentoK){
  
  return(Objeto) # Opcional
}

## Ejecutando la funcion:
NombreFuncion(Argumento1 = ..., Argumento2 = ...)
```

</div>

--------------------------------------------------------------------------------

<div style = "font-size:1.4em">

**Sintaxis para crear funciones**

</div>

<div style = "font-size:1.3em">

```{r eval = FALSE, echo = TRUE}
NombreFuncion <- function(Argumento1, Argumento2, ...){
  
  ## No dar ningun argumento tambien es opcion.
  
  ## Aqui dentro se escriben todo el procedimiento
  ## que se desea ejecutar cuando NombreFuncion es llamada.
  
  ## Si se desea que la funcion retorne un 
  ## objeto tras su ejecucion:
  return(Objeto)
  
  ## Tambien es opcion que no entregue nada.
}
```

</div>

--------------------------------------------------------------------------------

* Considere la función `Funcion(Argumento, X_Y, Z)`. 

* Suponga, para este caso, que para que la función *funcione*, los tres argumentos deben recibir valores numéricos. 

* Cualquiera de las siguientes opciones son sintaxis válidas en R:

. . .

```{r eval = FALSE, echo = TRUE}
Funcion(100, 200, 300)

Funcion(Argumento = 100, X_Y = 200, Z = 300)

Funcion(Arg = 100, X = 200, Z = 300)

Funcion(A = 100, 200, 300)
```

--------------------------------------------------------------------------------

**Ejemplos:**

. . .

::: {.nonincremental}

1. Función que imprime el poema de Neruda cuando es llamada.


```{r eval = TRUE, echo = TRUE}
Poema <- function(){
  cat("No hay espacio más ancho que el dolor, \nno hay universo como aquel que sangra.")
}
```
<br>

```{r eval = TRUE, echo = TRUE}
Poema()
```

:::


--------------------------------------------------------------------------------

::: {.nonincremental}

**Ejemplos:**

2. Función que transforma grados Celsius a Farenheit.

```{r eval = TRUE, echo = TRUE}
CelsiusFarenheit <- function(Celsius){
  Farenheit <- 32 + Celsius * 9/5
  
  Salida <- paste(Celsius, "grados Celsius son", Farenheit, "grados Farenheit.")
  return(Salida)
  
}
```

```{r echo = TRUE}
CelsiusFarenheit(0) # Congelamiento del agua
CelsiusFarenheit(Celsius = 30)
CelsiusFarenheit(C = 100)  # Ebullicion  del agua
CelsiusFarenheit(C = 220)  # Temperatura para hornear un pancito
```

:::

--------------------------------------------------------------------------------

::: {.nonincremental}

**Ejemplos:**

3. Funcion que calcula el promedio entre los cuatro laboratorios de este curso.

```{r eval = TRUE, echo = TRUE}
PromedioLaboratorios <- function(Lab1, Lab2, Lab3, Lab4){
  
  Promedio <- (Lab1 + Lab2 + Lab3 + Lab4)/4
  
  Promedio # Equivalente a solo escribir return(Promedio)
}
```

```{r echo = TRUE}
PromedioLaboratorios(1.0, 7.0, 6.0, 5.5)
PromedioLaboratorios(6.0, 5.4, 7.0, 4.3)
PromedioLaboratorios(7.0, 7.0, 6.0, 7.0)
```
:::


--------------------------------------------------------------------------------

<div style = "font-size:1.4em">
**¡Actividad Bonificada!**
</div>

1. Construya una función que reciba de argumentos las notas de la Tarea 1 y 2 y entregue como salida el mensaje *Promedio de Laboratorios = NOTA OBTENIDA*.

2. Construya una funcion que reciba de argumentos las notas de los laboratorios 1, 2, 3, y 4, las tareas 1 y 2, y el examen, y que calcule la nota final del curso. La nota final debe entregarla junto a un mensaje acorde.

3. Muestre evidencia de que realizó el resto de actividades de esta clase.

  * *Basta responder hasta aquí para haber completado la actividad bonificada.*

Continúa....

--------------------------------------------------------------------------------

<div style = "font-size:1.4em">
**¡Actividad Bonificada!**
</div>

3. Escriba una función que tome como argumentos una nota y un porcentaje de exigencia, y que devuelva la nota ajustada a un nuevo porcentaje de exigencia, asumiendo que la nota original corresponde a un 50% de exigencia.

4. Escriba una función que reciba tantos argumentos como evaluaciones haya en el curso, además de un porcentaje de exigencia. La función deberá recalcular la nota final del curso ajustándola al porcentaje de exigencia indicado, asumiendo que las evaluaciones originales corresponden a un 50% de exigencia.

